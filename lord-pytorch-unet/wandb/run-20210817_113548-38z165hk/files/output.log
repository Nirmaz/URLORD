True cuda
args: None URLord URLord_2 /cs/casmip/nirm/embryo_project_version1/EXP_FOLDER/exp_fp2/200/exp2d_DF_3_2d True urlord2d_200exp2d_DF_3_2d DF_3_2d_TL DF_3_2d_TU DF_3_2d_VA DF_3_2d_TE False True /cs/labs/josko/nirm/embryo_project_version1/embyo_projects_codes/models_config/config_2d /cs/labs/josko/nirm/embryo_project_version1/embyo_projects_codes/models_config/config_2d
dividing....
(2016, 128, 128, 1) imaggggggeeeeeeeeeeeeeeee shape
[0.] unique claseesssssssssssssssssssssssssssssssssssssssssssssssss
False False load_model
arrive train
2 30 config['n_classes'], config['class_dim']
/cs/casmip/nirm/embryo_project_version1/venu-pytorch/lib/python3.7/site-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /pytorch/c10/core/TensorImpl.h:1156.)
  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)
/cs/labs/josko/nirm/embryo_project_version1/embyo_projects_codes/lord-pytorch-unet/model/modules_unet.py:356: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  tensor = torch.tensor(x, requires_grad = False)
here seg decay
here recon_loss
1 recon_decay
tensor(0., device='cuda:0') tensor(1., device='cuda:0') min max before 1
torch.Size([16]) sum mask size 1
torch.Size([16]) losssss
torch.Size([16]) losssss
m_f check
tensor(0., device='cuda:0', grad_fn=<MinBackward1>) tensor(14.1502, device='cuda:0', grad_fn=<MaxBackward1>) min max before
tensor(0., device='cuda:0', grad_fn=<MinBackward1>) tensor(40.8424, device='cuda:0', grad_fn=<MaxBackward1>) min max after
mo_f check
tensor(0., device='cuda:0', grad_fn=<MinBackward1>) tensor(15.5698, device='cuda:0', grad_fn=<MaxBackward1>) min max before
tensor(0., device='cuda:0', grad_fn=<MinBackward1>) tensor(40.4791, device='cuda:0', grad_fn=<MaxBackward1>) min max after
tensor([442457.3750, 497460.7188, 503840.6875, 442457.3750, 498302.8438,
        497488.5625, 505246.5000, 505261.0000, 487613.0000, 449616.1875,
        442457.3750, 457724.7188, 525459.6250, 442457.3750, 485125.9375,
        504781.5625], device='cuda:0', grad_fn=<AddBackward0>) sum_m_f size
tensor([444117.8750, 488814.8750, 495215.8125, 444117.8750, 492151.9062,
        486385.8125, 494300.5625, 494816.8125, 466233.3125, 448767.4375,
        444117.8750, 450013.4375, 515398.5625, 444117.8750, 475268.4375,
        492881.7812], device='cuda:0', grad_fn=<AddBackward0>) sum_m_f size
  0%|                                                                                                                                                                                                                                                                                        | 0/378 [00:00<?, ?it/s][W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)                                                                                                                                                                                             | 0/378 [00:00<?, ?it/s]
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)                                                                                                                                                                                              | 0/45 [00:00<?, ?it/s]
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)                                                                                                                                                                                             | 0/126 [00:00<?, ?it/s]
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
Traceback (most recent call last):
  File "lord_exp.py", line 140, in <module>
    main()
  File "lord_exp.py", line 133, in main
    args.func(args)
  File "lord_exp.py", line 114, in run_exp
    train_model(model_dict, path_new_exp, model_name, exp_dict['data_l_name'], exp_dict['data_u_name'], exp_dict['data_v_name'], exp_dict['data_t_name'], exp_dict['base_dir'])
  File "lord_exp.py", line 31, in train_model
    take_from_arg = False)
  File "/cs/labs/josko/nirm/embryo_project_version1/embyo_projects_codes/lord-pytorch-unet/lord_unet.py", line 367, in train_ulord
    loaded_model=load_model
  File "/cs/labs/josko/nirm/embryo_project_version1/embyo_projects_codes/lord-pytorch-unet/model/training_unet.py", line 423, in train
    segs_t, classes_t, model_dir, tensorboard_dir, loaded_model, dim)
  File "/cs/labs/josko/nirm/embryo_project_version1/embyo_projects_codes/lord-pytorch-unet/model/training_unet.py", line 518, in train_URLordModel
    self.training_model(model_dir, tensorboard_dir)
  File "/cs/labs/josko/nirm/embryo_project_version1/embyo_projects_codes/lord-pytorch-unet/model/training_unet.py", line 695, in training_model
    reco_loss_epoch, reco_loss_epoch_witha, i)
  File "/cs/labs/josko/nirm/embryo_project_version1/embyo_projects_codes/lord-pytorch-unet/model/training_unet.py", line 370, in do_step_ulord
    reco_loss_l, reco_loss_u = self.calc_rec_loss(out, batch_t, batch_u, criterion)
  File "/cs/labs/josko/nirm/embryo_project_version1/embyo_projects_codes/lord-pytorch-unet/model/training_unet.py", line 310, in calc_rec_loss_urord
    reco_loss = criterion(out['img'], batch_t['img'] * seg, seg_l)
  File "/cs/casmip/nirm/embryo_project_version1/venu-pytorch/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/cs/labs/josko/nirm/embryo_project_version1/embyo_projects_codes/lord-pytorch-unet/model/modules_unet.py", line 636, in forward
    layer_loss = torch.divide(torch.abs((f1[i] * mask) - (f2[i] * mask)).view(b_sz, -1).sum(1), sum_m_f)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!